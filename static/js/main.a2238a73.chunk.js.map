{"version":3,"sources":["config/particle-config.js","ParticleBackground.js","Assets/DinShagnada.mp3","BackgroundMusic.js","Assets/circles.png","Menu.js","Map.js","Cards.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["pariclesConfig","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","ParticleBackground","style","position","top","left","params","BackgroundMusic","url","Sound","useState","Audio","audio","playing","setPlaying","useEffect","console","log","play","pause","addEventListener","removeEventListener","useAudio","toggle","Button","bottom","right","borderRadius","background","border","onClick","Menu","Navbar","fixed","bg","variant","expand","Container","Brand","cursor","to","smooth","Toggle","Collapse","id","Nav","className","Link","AnyReactComponent","text","fontSize","SimpleMap","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Cards","Card","Img","Body","Title","Text","App","Row","Col","alignItems","display","justifyContent","xs","md","lg","circles","alt","flexDirection","fontWeight","fontFamily","Map","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a2238a73.chunk.js","sourcesContent":["const pariclesConfig = {\r\n  particles: {\r\n    number: {\r\n      value: 96,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n    color: {\r\n      value: \"#fff\",\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#000000\",\r\n      },\r\n      polygon: {\r\n        nb_sides: 5,\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100,\r\n      },\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    size: {\r\n      value: 10,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    line_linked: {\r\n      enable: false,\r\n      distance: 500,\r\n      color: \"#ffffff\",\r\n      opacity: 0.4,\r\n      width: 2,\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 4,\r\n      direction: \"bottom\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"bubble\",\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 4,\r\n        duration: 0.3,\r\n        opacity: 1,\r\n        speed: 3,\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4,\r\n      },\r\n      push: {\r\n        particles_nb: 4,\r\n      },\r\n      remove: {\r\n        particles_nb: 2,\r\n      },\r\n    },\r\n  },\r\n  retina_detect: true,\r\n};\r\n\r\nexport default pariclesConfig;\r\n","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport pariclesConfig from \"./config/particle-config\";\r\nimport \"./App.css\";\r\nfunction ParticleBackground() {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Particles params={pariclesConfig}></Particles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParticleBackground;\r\n","export default __webpack_public_path__ + \"static/media/DinShagnada.ddd1d0b5.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport Sound from \"./Assets/DinShagnada.mp3\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdMusicNote } from \"react-icons/md\";\r\nimport { MdMusicOff } from \"react-icons/md\";\r\n\r\nconst useAudio = (Sound) => {\r\n  const [audio] = useState(new Audio(Sound));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  useEffect(() => {\r\n    console.log(\"play0\");\r\n    setPlaying(true);\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"play\");\r\n    playing ? audio.play() : audio.pause();\r\n  }, [playing, audio]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"play1\");\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, [audio]);\r\n\r\n  return [playing, toggle];\r\n};\r\n\r\nconst BackgroundMusic = ({ url }) => {\r\n  const [playing, toggle] = useAudio(Sound);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"10%\",\r\n          right: \"3%\",\r\n          borderRadius: \"50%\",\r\n          background: \"#edd8d8\",\r\n          color: \"#BD3C3C\",\r\n          border: \"2px solid \",\r\n        }}\r\n        onClick={toggle}\r\n      >\r\n        {playing ? <MdMusicOff /> : <MdMusicNote />}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackgroundMusic;\r\n","export default __webpack_public_path__ + \"static/media/circles.436f7b85.png\";","import React from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nfunction Menu() {\r\n  return (\r\n    <Navbar fixed=\"top\" bg=\"light\" variant=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand style={{ cursor: \"pointer\" }}>\r\n          <Link to=\"header\" smooth={true} duration={700}>\r\n            Shweta weds Gopal\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            {/* <Nav.Link>\r\n              <Link to=\"header\" smooth={true} duration={1000}>\r\n                Shweta weds Gopal\r\n              </Link>\r\n            </Nav.Link> */}\r\n            <Nav.Link>\r\n              <Link to=\"events\">Events</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"map\">Venue</Link>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst AnyReactComponent = ({ text }) => (\r\n  <div style={{ color: \"#FF0000\", fontSize: \"24px\" }}>{text}</div>\r\n);\r\n\r\nclass SimpleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 29.016625,\r\n      lng: 77.76014,\r\n    },\r\n    zoom: 15,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: \"100vh\", width: \"95%\" }} id=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDgx3L_yOFvTTGrXebrfYOguxMOrkHYo4k\" }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent lat={29.016625} lng={77.76014} text=\"shop\" />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nfunction Cards() {\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n      <Card.Body>\r\n        <Card.Title>Card Title</Card.Title>\r\n        <Card.Text>\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </Card.Text>\r\n        <Button variant=\"primary\">Go somewhere</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\nimport ParticleBackground from \"./ParticleBackground\";\nimport \"./App.css\";\nimport BackgroundMusic from \"./BackgroundMusic\";\nimport circles from \"./Assets/circles.png\";\nimport Menu from \"./Menu\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { colorMix } from \"tsparticles\";\nimport Map from \"./Map\";\nimport Cards from \"./Cards\";\nfunction App() {\n  return (\n    <div>\n      <div className=\"mycontainer\">\n        <Menu />\n        <ParticleBackground />\n        <div\n          id=\"header\"\n          style={{\n            position: \"absolute\",\n            top: \"50px\",\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          <Container>\n            <Row>\n              <Col\n                style={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n                xs={12}\n                md={4}\n                lg={3}\n              >\n                <img src={circles} alt=\"side-img\" className=\"sideImage\" />\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  fontWeight: \"bold\",\n                  fontFamily: \"cursive\",\n                  color: \"#fff\",\n                  justifyContent: \"center\",\n                }}\n                xs={12}\n                md={4}\n                lg={6}\n              >\n                <p style={{ fontSize: \"60px\" }}> Shweta </p>\n                <p style={{ fontSize: \"30px\" }}> weds </p>\n                <p style={{ fontSize: \"60px\" }}> Gopal </p>\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                xs={12}\n                md={4}\n                lg={3}\n              >\n                <img src={circles} alt=\"side-img\" className=\"sideImage2\" />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n\n        <BackgroundMusic />\n      </div>\n\n      <Container>\n        <Row>\n          <Cards />\n        </Row>\n        <Row>\n          <Map />\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}